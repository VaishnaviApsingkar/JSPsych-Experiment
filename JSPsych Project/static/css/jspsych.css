/*
 * CSS for jsPsych experiments.
 *
 * This stylesheet provides minimal styling to make jsPsych
 * experiments look polished without any additional styles.
 * 
 * modified by arella gussow 08/12/21 for mouse tracking experiment
 */

 @import url(https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700);

/* Container holding jsPsych content */

 .jspsych-display-element {
   display: flex;
   flex-direction: column;
   overflow-y: auto;
 }

 .jspsych-display-element:focus {
   outline: none;
 }

 .jspsych-content-wrapper {
   display: flex;
   margin: auto;
   flex: 1 1 100%;
   width: 100%;
 }

 .jspsych-content {
   max-width: 100%; /* this is mainly an IE 10-11 fix */
   text-align: center;
   margin: auto; /* this is for overflowing content */
 }

 /* added by arella 10/27/21: justify and center blocks of text */
.jspsych-justify {
  text-align: center;
  display:inline-block;
  max-width: 70%;
  text-align: justify;
  font-size: 22px;
}


/* added by arella 10/18/23: display probe word in the center and large   text-align: center;
  display: inline-block;*/

.jspsych-probe {
  font-size: 40px;
  font-weight:bold;
  position:absolute;
  top: 50%;
  right: 48%;
  margin: auto;
  flex-grow: 1;
  text-align:start
}


 .jspsych-top {
   align-items: flex-start;
 }

 .jspsych-middle {
   align-items: center;
 }

/* fonts and type */

.jspsych-display-element {
  font-family: 'Open Sans', 'Arial', sans-serif;
  font-size: 22px;
  line-height: 1.6em;
}

/* Form elements like input fields and buttons */

.jspsych-display-element input[type="text"] {
  font-family: 'Open Sans', 'Arial', sans-serif;
  font-size: 14px;
}


/* borrowing Bootstrap style for btn elements, but combining styles a bit */
.jspsych-btn {
  display: inline-block;
  padding: 18px 18px;
  margin: 0px;
  font-size: 20px;
  font-weight: 550;
  font-family: 'Open Sans', 'Arial', sans-serif;
  cursor: pointer;
  line-height: 1.4;
  text-align: center;
  white-space: normal; /* changed from "nowrap". aeg 08/17 */
  vertical-align: middle;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
  color: #333;
  background-color: #fff;
  border-color: #ccc;
}



/* only apply the hover style on devices with a mouse/pointer that can hover - issue #977 */
@media (hover: hover) {
  .jspsych-btn:hover {
    background-color: #ddd;
    border-color: #aaa;
  }
}

.jspsych-btn:active {
  background-color: #ddd;
  border-color:#000000;
}

.jspsych-btn:disabled {
  background-color: #eee;
  color: #aaa;
  border-color: #ccc;
  cursor: not-allowed;
}

/* custom style for input[type="range] (slider) to improve alignment between positions and labels */

.jspsych-slider {
  appearance: none;
  -webkit-appearance: none; 
  -moz-appearance: none;
  width: 100%; 
  background: transparent; 
}
.jspsych-slider:focus {
  outline: none;
}
/* track */
.jspsych-slider::-webkit-slider-runnable-track {
  appearance: none;
  -webkit-appearance: none;
  width: 100%;
  height: 8px;
  cursor: pointer;
  background: #eee;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border-radius: 2px;
  border: 1px solid #aaa;
}
.jspsych-slider::-moz-range-track {
  appearance: none;
  width: 100%;
  height: 8px;
  cursor: pointer;
  background: #eee;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border-radius: 2px;
  border: 1px solid #aaa;
}
.jspsych-slider::-ms-track {
  appearance: none;
  width: 99%;
  height: 14px;
  cursor: pointer;
  background: #eee;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  border-radius: 2px;
  border: 1px solid #aaa;
}
/* thumb */
.jspsych-slider::-webkit-slider-thumb {
  border: 1px solid #666;
  height: 24px;
  width: 15px;
  border-radius: 5px;
  background: #ffffff;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -9px;
}
.jspsych-slider::-moz-range-thumb {
  border: 1px solid #666;
  height: 24px;
  width: 15px;
  border-radius: 5px;
  background: #ffffff;
  cursor: pointer;
}
.jspsych-slider::-ms-thumb {
  border: 1px solid #666;
  height: 20px;
  width: 15px;
  border-radius: 5px;
  background: #ffffff;
  cursor: pointer;
  margin-top: -2px;
}

/* jsPsych progress bar */

#jspsych-progressbar-container {
  color: #555;
  border-bottom: 1px solid #dedede;
  background-color: #f9f9f9;
  margin-bottom: 1em;
  text-align: center;
  padding: 8px 0px;
  width: 100%;
  line-height: 1em;
}
#jspsych-progressbar-container span {
  font-size: 14px;
  padding-right: 14px;
}
#jspsych-progressbar-outer {
  background-color: #eee;
  width: 50%;
  margin: auto;
  height: 14px;
  display: inline-block;
  vertical-align: middle;
  box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}
#jspsych-progressbar-inner {
  background-color: #aaa;
  width: 0%;
  height: 100%;
}

/* Control appearance of jsPsych.data.displayData() */
#jspsych-data-display {
  text-align: left;
}



/* CSS classes added by Arella Gussow 08/2021 */



/* customized initation button for entire experiment */
.jspsych-btn-init{
  display: inline-block;
  padding: 36px 36px;
  margin: 0px;
  font-size: 24px;
  font-weight: 550;
  font-family: 'Open Sans', 'Arial', sans-serif;
  cursor: pointer;
  line-height: 1.4;
  text-align: center;
  white-space: normal; /* changed from "nowrap". aeg 08/17 */
  vertical-align: middle;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
  color: #333;
  background-color: #fff;
  border-color: #ccc;
}


/* customized start button for mouse tracking trial: green, bottom center, square */
.jspsych-btn-start {
  display: inline-block;
  padding: 24px 24px;
  margin: 0px;
  font-size: 20px;
  font-weight: 600;
  font-family: 'Open Sans', 'Arial', sans-serif;
  cursor: pointer;
  line-height: 1.4;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
  color: black;
  background-color: green;
  border-color: black;
}


/* circular border around images -- NOT WORKING CURRENTLY. aeg 08/23*/
.jspsych-circle-border {
width: 300px;
height: 300px;
border-radius: 300px;
-webkit-border-radius: 300px;
-moz-border-radius: 300px;
background: url(URL) no-repeat;
box-shadow: 0 0 8px rgba(0, 0, 0, .8);
-webkit-box-shadow: 0 0 8px rgba(0, 0, 0, .8);
-moz-box-shadow: 0 0 8px rgba(0, 0, 0, .8);
}

#jspsych-circle-border {
border: 5px solid #000000;
border-radius: 80%;
/*display: inline-block;*/
}




/** intended for rotating objects in a circle. not yet tested/implemented - check if worth it. aeg 09/14 **/
.saturn {   
    /* 
     * Make the initial position to be the center of the circle you want this
     * object follow.
     */
    position: absolute;
    left: 315px;
    top: 143px;

    /*
     * Sets up the animation duration, timing-function (or easing)
     * and iteration-count. Ensure you use the appropriate vendor-specific 
     * prefixes as well as the official syntax for now. Remember, tools like 
     * CSS Please are your friends!
     */
    -webkit-animation: myOrbit 4s linear infinite; /* Chrome, Safari 5 */
       -moz-animation: myOrbit 4s linear infinite; /* Firefox 5-15 */
         -o-animation: myOrbit 4s linear infinite; /* Opera 12+ */
            animation: myOrbit 4s linear infinite; /* Chrome, Firefox 16+, 
                                                      IE 10+, Safari 5 */
    
    
    
}

/*
 * Set up the keyframes to actually describe the begining and end states of 
 * the animation.  The browser will interpolate all the frames between these 
 * points.  Again, remember your vendor-specific prefixes for now!
 */
@-webkit-keyframes myOrbit {
    from { -webkit-transform: rotate(0deg) translateX(150px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(150px) rotate(-360deg); }
}

@-moz-keyframes myOrbit {
    from { -moz-transform: rotate(0deg) translateX(150px) rotate(0deg); }
    to   { -moz-transform: rotate(360deg) translateX(150px) rotate(-360deg); }
}

@-o-keyframes myOrbit {
    from { -o-transform: rotate(0deg) translateX(150px) rotate(0deg); }
    to   { -o-transform: rotate(360deg) translateX(150px) rotate(-360deg); }
}

@keyframes myOrbit {
    from { transform: rotate(0deg) translateX(150px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(150px) rotate(-360deg); }
}



